// ПРИМЕР РАБОТЫ С ВЫВОДАМИ ПОРТОВ МОДУЛЯ:        //
                                                  //
// Расширитель выводов PCA9555:                   // https://iarduino.ru
// Информация о подключении модулей к шине I2C:   // https://wiki.iarduino.ru/page/i2c_connection/
// Информация о модуле и описание библиотеки:     // https://wiki.iarduino.ru
                                                  //
uint8_t pinA=0;                                   // Младший вывод младшего порта.
uint8_t pinB=15;                                  // Старший вывод старшего порта.
                                                  //
#include <Wire.h>                                 // Подключаем библиотеку  для работы с аппаратной шиной I2C, до подключения библиотеки iarduino_PCA9555.
#include <iarduino_PCA9555.h>                     // Подключаем библиотеку  для работы с расширителем выводов PCA9555.
iarduino_PCA9555 gpio(0x20);                      // Объявляем  объект gpio для работы с функциями и методами библиотеки iarduino_PCA9555, указывая адрес модуля на шине I2C.
                                                  // Если объявить объект без указания адреса (iarduino_PCA9555 gpio;), то адрес будет найден автоматически.
void setup(){                                     //
     delay(500);                                  // Ждём завершение переходных процессов связанных с подачей питания.
     gpio.begin(&Wire); // &Wire1, &Wire2 ...     // Инициируем работу с расширителем выводов PCA9555, указав ссылку на объект для работы с шиной I2C на которой находится датчик.
//   Конфигурируем выводы портов:                 // Объект основной аппаратной шины I2C (Wire) можно не указывать: gpio.begin();
     gpio.portMode(0, pinsAll(INPUT)  );          // Конфигурируем все выводы 0 порта как входы.
     gpio.portMode(1, pinsAll(OUTPUT) );          // Конфигурируем все выводы 1 порта как выходы.
     gpio.portMode(2, pinsAll(INPUT)  );          // Конфигурируем все выводы обоих порта как входы.
     gpio.portMode(0, 0b11110000     );           // Конфигурируем 4 младших вывода порта 0 как входы, а 4 старших как выходы.
     gpio.portMode(1, 0xF0           );           // Конфигурируем 4 младших вывода порта 1 как входы, а 4 старших как выходы.
     gpio.portMode(2, 0xFF00         );           // Конфигурируем все выводы 0 порта как входы, а все выводы 1 порта как выходы.
}                                                 // Если первым параметром указать 2, то будут сконфигурированы оба порта.
                                                  //
void loop(){                                      //
//   Чтение уровней из портов:                    //
     uint8_t  i=gpio.portRead(0);                 // Читаем состояние всех выводов 0 порта в переменную i.
     uint8_t  j=gpio.portRead(1);                 // Читаем состояние всех выводов 1 порта в переменную j.
     uint16_t k=gpio.portRead(2);                 // Читаем состояние всех выводов обоих портов в переменную k.
//   Установка уровней в порты:                   //
     gpio.portWrite(0, j);                        // Устанавливаем уровни 0 порта: на выводах установятся уровни в соответствии с битами байта j.
     gpio.portWrite(1, 0b11110000 );              // Устанавливаем уровни 1 порта: 4 младших вывода = 0, а 4 старших = 1.
     gpio.portWrite(1, 0xF0       );              // Устанавливаем уровни 1 порта: 4 младших вывода = 0, а 4 старших = 1.
     gpio.portWrite(2, 0xFF00     );              // Устанавливаем уровни обоих портов: выводы 0 порта = 0, а 1 порта = 1.
}                                                 //
                                                  //
//   ПРИМЕЧАНИЕ:                                  //
//   Все выводы внутрисхемно подтянуты.           //